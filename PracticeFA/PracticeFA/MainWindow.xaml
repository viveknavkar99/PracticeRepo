<Window x:Class="PracticeFA.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PracticeFA"
        xmlns:converters="clr-namespace:PracticeFA.Converters"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
        <converters:EqualityConverter x:Key="EqualityConverter"/>

        <Style x:Key="listBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Button x:Name="Add" 
				Click="Add_Click" 
				Content="Add Item"
				Grid.Row="0" 
				Height="30" 
				Width="100"></Button>
        <Label Grid.Row="1" Content="{Binding FromParent}"/>

        <ListView x:Name="Extractors" SelectionMode="Single" HorizontalContentAlignment="Stretch"
				  Grid.Row="2" SelectedItem="{Binding SelectedTaskItem}"
				  ItemsSource="{Binding TaskItems}" ItemContainerStyle="{StaticResource listBoxItemStyle}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="50"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal" Margin="0 2">
                            <RadioButton IsChecked="{Binding IsSelectedRowId}" GroupName="datatype">
                                <RadioButton.Style>
                                    <Style TargetType="{x:Type RadioButton}">
                                        <Style.Triggers>
                                            <DataTrigger Value="False">
                                                <DataTrigger.Binding>
                                                    <MultiBinding Converter="{StaticResource EqualityConverter}">
                                                        <Binding Path="SelectedListItem.ExtractorDataType" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                        <Binding RelativeSource="{RelativeSource AncestorType=ListView}" Path="DataContext.FromParent" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                    </MultiBinding>
                                                </DataTrigger.Binding>
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </RadioButton.Style>
                            </RadioButton>
                            <Label Content="ID"></Label>
                            <TextBox Width="100" Text="{Binding Id}" Margin="0 0 5 0" VerticalContentAlignment="Center"/>
                            <Label Content="Name"></Label>
                            <ComboBox x:Name="dataTypeCombo" ItemsSource="{Binding Extractors}" 
								  SelectedItem="{Binding SelectedExtractor}" SelectionChanged="Extractor_SelectionChanged"
								  DisplayMemberPath="Name" 
								  MinWidth="100"/>

                            <ContentPresenter Content="{Binding ControlsStackPanel}"/>

                        </StackPanel>

                        <Button x:Name="deleteRecord" Grid.Column="1" Command="{Binding DataContext.DeleteTaskItem, RelativeSource={RelativeSource AncestorType=ListView}}"
                                CommandParameter="{Binding}">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border BorderThickness="0" BorderBrush="Gray" Margin="5 0" Width="20">
                                                    <TextBlock x:Name="content" Text="X" FontSize="14" FontWeight="Bold" Foreground="Gray" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="content" Property="Foreground" Value="Red"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Button Grid.Row="3" Click="Save_Click" 
              Content="Submit" />
    </Grid>
</Window>
