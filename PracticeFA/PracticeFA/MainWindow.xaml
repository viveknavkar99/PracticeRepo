<Window x:Class="PracticeFA.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PracticeFA"
        xmlns:converters="clr-namespace:PracticeFA.Converters"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
        <converters:EqualityConverter x:Key="EqualityConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Button x:Name="Add" 
				Click="Add_Click" 
				Content="Add Item"
				Grid.Row="0" 
				Height="30" 
				Width="100"></Button>
        <Label Grid.Row="1" Content="{Binding FromParent}"></Label>
        <ListView x:Name="Extractors"
				  Grid.Row="2" SelectedItem="{Binding SelectedTaskItem}"
				  ItemsSource="{Binding TaskItems}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <RadioButton IsChecked="{Binding IsSelectedRowId}" GroupName="datatype">
                            <RadioButton.Style>
                                <Style TargetType="{x:Type RadioButton}">
                                    <Style.Triggers>
                                        <DataTrigger Value="False">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource EqualityConverter}">
                                                    <Binding Path="SelectedListItem.ExtractorDataType" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                    <Binding RelativeSource="{RelativeSource AncestorType=ListView}" Path="DataContext.FromParent" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </RadioButton.Style>
                        </RadioButton>
                        <Label Content="ID"></Label>
                        <TextBox Width="100"
									 Text="{Binding Id}"></TextBox>
                        <Label Content="Name"></Label>
                        <ComboBox x:Name="dataTypeCombo" ItemsSource="{Binding Extractors}" 
								  SelectedItem="{Binding SelectedExtractor}" SelectionChanged="Extractor_SelectionChanged"
								  DisplayMemberPath="Name" 
								  Width="100"></ComboBox>

                        <ContentPresenter Content="{Binding ControlsStackPanel}"/>

                        <Button x:Name="deleteRecord" Content="X" Height="20" Width="20" Margin="5 0 0 0" 
                                Command="{Binding DataContext.DeleteTaskItem, RelativeSource={RelativeSource AncestorType=ListView}}"
                                CommandParameter="{Binding}"/>

                        <!--<StackPanel Orientation="Horizontal"
									Margin="5,0,0,0"
									Visibility="{Binding IsTextBox1, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="{Binding TextBoxLabel1}"></Label>
                            <TextBox Width="100" ToolTip="{Binding Description}"
									 Text="{Binding TextBoxValue1}"></TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
									Margin="5,0,0,0"
									Visibility="{Binding IsTextBox2, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="{Binding TextBoxLabel2}"></Label>
                            <TextBox Width="100"
									 Text="{Binding TextBoxValue2}"></TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
									Margin="5,0,0,0"
									Visibility="{Binding IsTextBox3, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="{Binding TextBoxLabel3}"></Label>
                            <TextBox Width="100"
									 Text="{Binding TextBoxValue3}"></TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
									Margin="5,0,0,0"
									Visibility="{Binding IsComboBox, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="{Binding ComboBoxLabel}"></Label>
                            <ComboBox ItemsSource="{Binding ComboBoxItemSource}"
									  SelectedItem="{Binding ComboBoxSelectedItem}"
									  DisplayMemberPath="Title"
									  Width="100"></ComboBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
									Margin="5,0,0,0"
									Visibility="{Binding IsMultilineTextBox, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="{Binding MultilineTextBoxLabel}"></Label>
                            <TextBox AcceptsReturn="True"
									 Width="100"
									 Text="{Binding MultilineTextBoxValue}"></TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"									
									Margin="5,0,0,0"
									Visibility="{Binding IsCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="{Binding CheckBoxLabel}"></Label>
                            <CheckBox Margin="0,7,0,0"
									  IsChecked="{Binding IsCheckBoxValue}"></CheckBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
									Margin="5,0,0,0"
									Visibility="{Binding IsMultiSelectComboBox, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="{Binding MultiSelectComboBoxLabel}"></Label>
                            <ComboBox ItemsSource="{Binding ComboBoxItemSource}"									  
									  Width="100">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox Margin="0,7,0,0"
													  IsChecked="{Binding IsSelected}"></CheckBox>
                                            <Label Content="{Binding Title}"></Label>
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
									Margin="5,0,0,0"
									Visibility="{Binding IsAnyComboBox, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <ComboBox ItemsSource="{Binding AnyComboBoxItemSource}"									  
									  SelectedItem="{Binding AnyComboBoxSelectedItem}"									 
									  Width="100">
                            </ComboBox>
                            <TextBox Visibility="{Binding IsAnyTextBox, Converter={StaticResource BooleanToVisibilityConverter}}"
									 Text="{Binding AnyTextBoxValue}"
									  Margin="5,0,0,0"
									 Width="100"></TextBox>
                        </StackPanel>-->
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Button Grid.Row="3" Click="Save_Click" 
              Content="Submit" />
    </Grid>
</Window>
